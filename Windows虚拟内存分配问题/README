Windows虚拟内存分配问题
问题描述
使用Win32 API函数，编写一个包含两个线程的进程，一个线程用于模拟内存分配活动，一个线程用于跟踪第一个线程的内存行为。
要求模拟的操作包括保留一个区域、提交一个区域、回收一个区域、释放一个区域，以及锁定与解锁一个区域。跟踪线程要输出每次内存分配操作后的内存状态。
通过对内存分配活动的模拟和跟踪的编程实现，从不同侧面对Windows对用户进程的虚拟内存空间的管理、分配方法，对Windows分配虚拟内存、改变内存状态，以及对物理内存和页面文件状态查询的API函数的功能、参数限制、使用规则进一步有所了解。同时了解跟踪程序的编写方法。
实验环境
操作系统平台为Windows，编程语言不限。
函数参考
	VirtualAlloc用来保留、提交虚拟内存区域；
	VirtualLock和VirtualUnlock用于锁定、解锁内存区域；
	VirtualFree用于回收、释放内存区域；
	GetSystemInfo用于返回关于当前系统的信息；
	VirtualQuery用于查询进程地址空间中内存地址的信息。
实现提示
1. 模拟内存分配活动的线程Allocator与内存跟踪线程Tracker可以用一对信号量allo和trac来实现同步；
2. Allocator线程先等待Tracker输出结束( allo信号量被释放)，才能够进行内存分配操作，并且每进行一项内存操作就释放trac信号量，通知Tracker进行输出；
3. 跟踪线程Tracker在得到信号量trac之后开始输出内存状态，然后释放allo信号量，通知Allocator线程进行下一次内存分配操作。
思考题
1.	分析不同参数的设置对内存分配的结果影响。
2.	如果调换分配、回收、内存复位、加锁、解锁、提交、回收的次序，会有什么变化，并分析原因。
3.	在Linux操作系统上没有提供系统调用来实现“以页为单位的虚拟内存分配方式”，如果用户希望实现这样的分配方式，可以怎样做？解释你的思路。
